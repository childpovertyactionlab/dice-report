---
title: "D.I.C.E. Blight Abatement Report"
format: html
lightbox: true
---

```{r include=FALSE}
library(cpaltemplates)
library(tidyverse)
library(bslib)
library(bsicons)
library(sf)
library(highcharter)
library(geojsonsf)
library(geojsonio)
library(googlesheets4)
library(leaflet)
library(htmltools)
library(stringr)

##### Data #####
#gs4_deauth()
#impact <- read_sheet("https://docs.google.com/spreadsheets/d/1TInROva7mCNM7qvTA-6GFrkA4zIHcYNpy2eGhsgyg-8/edit#gid=0")

impact <- st_read("data/dice_data_march3.geojson") %>%
   filter(!is.na(division))

impact$DIVISION <- str_to_title(impact$division)

impact <- impact %>%
  mutate(
    month_year = floor_date(date, "month"),
    formatted_month = format(month_year, "%B, %Y")
  )

mapdata <- st_read("data/dpd_divisions.geojson")

point_data <- st_read("data/location.gpkg")

rtm_cells <- st_read("data/rtm_cells/citywide_rtm.shp")

##### Division Map Data #####
myhcmap<- mapdata %>% filter(DIVISION != "CENTRAL") %>%
          mutate(DIVISION = str_to_title(DIVISION))

geojson <- geojson_json(myhcmap)

polygons <- st_transform(mapdata, crs = 4269)

##### Value Box Data #####
total_lbs_trash <- sum(impact$lbs_trash, na.rm = TRUE)
total_lbs_produce <- sum(impact$lbs_produce, na.rm = TRUE)
cumulative_lbs_produce <- cumsum(impact$lbs_produce) 

properties_transformed <- sum(impact$completed == "TRUE", na.rm = TRUE)

##### Graph Data #####
dice_events <- impact %>%
  nrow()

trash_data <- impact %>%
  select(formatted_month, lbs_trash, month_year) %>%
  arrange(month_year) %>%
  group_by(month_year, formatted_month) %>%
  summarise(monthly_lbs_trash = sum(lbs_trash, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(cumulative_lbs_trash = cumsum(monthly_lbs_trash)) %>%
  slice(-n())


trash_by_district<- impact %>%
  select(lbs_trash, DIVISION) %>%
  filter(lbs_trash != 0) %>%
  group_by(DIVISION) %>%
  summarise(district_lbs_trash = sum(lbs_trash))

produce_by_month <- impact %>%
  select(formatted_month, lbs_produce, month_year) %>%
  arrange(month_year) %>%
  group_by(month_year, formatted_month) %>%
  summarise(monthly_lbs_produce = sum(lbs_produce, na.rm = TRUE)) %>%
  ungroup() %>%  
  mutate(cumulative_lbs_produce = cumsum(monthly_lbs_produce)) %>%
  slice(-n())



produce_by_district<- impact %>%
  filter(!is.na(lbs_produce)) %>%
  select(lbs_produce, DIVISION) %>%
  group_by(DIVISION) %>%
  summarise(district_lbs_produce = sum(lbs_produce)) %>%
  ungroup() %>%
  slice(-n())


people_served_data <- impact %>%
  select(formatted_month, people_served, DIVISION) %>%
  filter(people_served != 0) %>%
  group_by(formatted_month) %>%
  summarise(monthly_people_served = sum(people_served)) 

# Drop geometry from people_served_data
people_served_data_numeric <- people_served_data %>%
  st_drop_geometry()

# Calculate the monthly average of people served
monthly_average_people_served <- people_served_data_numeric %>%
  summarise(monthly_people_served = mean(monthly_people_served, na.rm = TRUE)) %>%
  round()

##### Leaflet Location Map Data #####
current_date <- Sys.Date()

transformation_locations <- point_data %>%
  filter(point_data$completed == "TRUE" )

produce_locations <- point_data %>%
  filter(point_data$event_type == "distribution") %>%
  distinct(full_address, .keep_all = TRUE) %>%
    mutate(
    jittered_lat = jitter(lat.y, amount = 0.0001),
    jittered_lon = jitter(long.y, amount = 0.0002)
  ) %>%
  ungroup()

clean_locations <- point_data %>%
  filter(point_data$event_type == "clean")

##### Crime Data #####
by_type_prev_3 <- read.csv("data/crime/by_type_prev_3.csv") %>%
  group_by(nibrs_crime) %>%
  summarise(prev_3 = sum(prev_3, na.rm = TRUE)) %>%
  ungroup() %>%
  filter(nibrs_crime != "AGG ASSAULT - FV") 

prev_3_yr_avg <- read.csv("data/crime/prev_3_avg_crime.csv") %>%
  group_by(Month) %>%
  summarise(Year = sum(mean, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(Month = factor(Month, levels = c("January", "February", "March", "April", "May", "June", 
                                          "July", "August", "September", "October", "November", "December")))
  
monthly_avg_2024 <- read.csv("data/monthly_avg_2024_crime.csv") %>%
  group_by(Month) %>%
  summarise(Year = sum(mean, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(Month = factor(Month, levels = c("January", "February", "March", "April", "May", "June", 
                                          "July", "August", "September", "October", "November", "December")))

by_type_24 <- read.csv("data/crime/by_type_24.csv") %>%
  group_by(nibrs_crime) %>%
  summarise(Year = sum(yr_crime, na.rm = TRUE)) %>%
  ungroup() %>%
  filter(nibrs_crime != "AGG ASSAULT - FV")

```

```{=html}
<style>
/* Formatting for Quotations */  

  .long-quote-container {
    width: 100%; 
  }
  .quote-container {
    width: 100%; 
    height: 80%
  }
  .small-quote-container {
    width: 100%; 
    height: 45%
  }
.quote-container p, .long-quote-container p, .small-quote-container p {
    margin: 0; /* Removes default paragraph margin */
    padding: 0;
    line-height: 1.5;
  }
.quote-container, .long-quote-container, .small-quote-container {
    border: none;
    outline: none;
    margin: 20px auto; /* Centers the container and maintains margin on the top and bottom */
    padding: 20px 10%; /* 20px padding on top and bottom, 10% on left and right */
    background-color: #f9f9f9; /* Light grey background */
    font-size: 18px;
    color: #042d33; /* Dark grey text color */
    text-align: center;
    box-sizing: border-box; /* Includes padding in width calculation */
  }
.quote-container cite, .long-quote-container cite, .small-quote-container cite {
 display: block;
    margin-top: 10px;
    font-size: 16px;
    color: #042d33; /* Lighter grey for citation */
    text-align: right;
    font-style: normal; /* Overrides default italic style of cite */
  }

/* Figure Border and Formatting */
 
  .map-container {
      position: relative;
      display: inline-block;
      border: 5px solid #042d33;
      padding: 1px;
      margin: 25px;
      width: 800px;  
      height: 515px; 
  }
  
    
</style>
```
::: grid
::: g-col-6
```{r}
highchart(type = "map") %>%
  hc_add_series(
    mapData = geojson, 
    showInLegend = FALSE
  ) %>%
  hc_add_series(
    data = myhcmap, 
    mapData = geojson, 
    joinBy = "DIVISION", 
    name = 'Click to Know More About:', 
    color = "#FFFFFF", 
    showInLegend = FALSE,
    dataLabels = list(
      enabled = TRUE, 
      format = '{point.DIVISION}', 
      style = list(fontWeight = 'bold', color = "#3F3F3F")
    ),
    tooltip = list(pointFormat = '{point.DIVISION} Division'),
    states = list(
      hover = list(
        color = "#042d33"
      )
    ),
    point = list(
      events = list(
        click = JS("function() { 
          var urlMap = {
            'Northwest': 'northwestpage.html',
            'North Central': 'northcentralpage.html',
            'Northeast': 'northeastpage.html',
            'South Central': 'southcentralpage.html',
            'Southwest': 'southwestpage.html',
            'Southeast': 'southeastpage.html'
          };
          var divisionName = this.DIVISION;
          var url = urlMap[divisionName];
          if (url) {
            window.open(url, '_blank');
          }
        }")
      )
    )
  ) %>%
  hc_caption(text = "Click on the map to see progress in a specific district.") %>%
  
  hc_mapNavigation(enabled = FALSE)
```
:::

::: g-col-6
**Data Informed Community Engagement (D.I.C.E)**, is the City Of Dallas's Office Of Integrated Public Safety Solutions (OIPSS) mission operationalized. OIPSS strives to enhance the general welfare and safety of Dallas residents by offering non-law enforcement solutions to risks that affect persons, property and the collective well-being of residents. Through an innovative combination of risk terrain modeling (RTM) and community-led risk-narratives, the D.I.C.E process has isolated city locations at the greatest risk of violent crime. These locations make up only 3% of the land area of the City of Dallas, but account for 21% of the total violent gun crimes. Historically neglected and forgotten by the system, these areas lack adequate resources and harbor violent crime. 
:::
:::

::: grid
::: g-col-12
::: container
Community data has yielded a wide array of solutions to support crime prevention efforts. Blight remediation, transformative change, and clean and green beautification efforts are just a few examples of how D.I.C.E plans to heal these communities. Our local partners work vigilantly to apply these solutions in the communities they themselves are already implemented in. This tool is a view of all of the work being done by CPAL's neighborhood and community partners, as well as OIPPS's efforts.
:::
:::
:::

# City-Wide Impact of D.I.C.E. Initiatives

::: grid
::: g-col-3
```{r}
total_lbs_trash <- formatC(total_lbs_trash, format = "d", big.mark = ",")
html_code <- paste0(
  '<div style="display: flex; flex-direction: column; align-items: center; height: 150px; border: 1px solid #042d33; border-radius: 5px; background-color: #042d33; color: white; position: relative;">',
  '<div style="position: absolute; top: 15%; width: 100%; display: flex; flex-direction: column; align-items: center;">',
  '<div style="display: flex; align-items: center; font-size: 2em; font-weight: bold;">', 
  total_lbs_trash, 
  '<span style="font-size: 1.25em; margin-left: 10px;">', bsicons::bs_icon("trash"), '</span></div>',
  '</div>',
  '<div style="position: absolute; bottom: 20px; width: 100%; text-align: center;">Pounds of Trash Removed</div>',
  '</div>'
)
htmltools::HTML(html_code)
```
:::

::: g-col-3
```{r}
total_lbs_produce <- formatC(total_lbs_produce, format = "d", big.mark = ",")
html_code <- paste0(
  '<div style="display: flex; flex-direction: column; align-items: center; height: 150px; border: 1px solid #042d33; border-radius: 5px; background-color: #042d33; color: white; position: relative;">',
  '<div style="position: absolute; top: 15%; width: 100%; display: flex; flex-direction: column; align-items: center;">',
  '<div style="display: flex; align-items: center; font-size: 2em; font-weight: bold;">', 
  total_lbs_produce, 
  '<span style="font-size: 1.25em; margin-left: 10px;">', bsicons::bs_icon("basket2"), '</span></div>',
  '</div>',
  '<div style="position: absolute; bottom: 20px; width: 100%; text-align: center;">Pounds of Produce Distributed</div>',
  '</div>'
)
htmltools::HTML(html_code)
```
:::

::: g-col-3
```{r}
monthly_average_people_served <- formatC(monthly_average_people_served, format = "d", big.mark = ",")
html_code <- paste0(
  '<div style="display: flex; flex-direction: column; align-items: center; height: 150px; border: 1px solid #042d33; border-radius: 5px; background-color: #042d33; color: white; position: relative;">',
  '<div style="position: absolute; top: 15%; width: 100%; display: flex; flex-direction: column; align-items: center;">',
  '<div style="display: flex; align-items: center; font-size: 2em; font-weight: bold;">', 
  monthly_average_people_served, 
  '<span style="font-size: 1.25em; margin-left: 10px;">', bsicons::bs_icon("person-fill"), '</span></div>',
  '</div>',
  '<div style="position: absolute; bottom: 20px; width: 100%; text-align: center;">Individuals Served Monthly</div>',
  '</div>'
)
htmltools::HTML(html_code)
```
:::
::: g-col-3
```{r}
total_events <- formatC(dice_events, format = "d", big.mark = ",")
html_code <- paste0(
  '<div style="display: flex; flex-direction: column; align-items: center; height: 150px; border: 1px solid #042d33; border-radius: 5px; background-color: #042d33; color: white; position: relative;">',
  '<div style="position: absolute; top: 15%; width: 100%; display: flex; flex-direction: column; align-items: center;">',
  '<div style="display: flex; align-items: center; font-size: 2em; font-weight: bold;">', 
  total_events, 
  '<span style="font-size: 1.25em; margin-left: 10px;">', bsicons::bs_icon("clipboard-check"), '</span></div>',
  '</div>',
  '<div style="position: absolute; bottom: 20px; width: 100%; text-align: center;">D.I.C.E Events Completed </div>',
  '</div>'
)
htmltools::HTML(html_code)
```
:::
:::
::: column-margin
Impact data updated monthly, last update 03/13/2025.
:::

::: grid
::: g-col-12
::: long-quote-container
To view the individual contributions our community partners, visit our [Collaborators Page.](collaborators.html#Community-Partners)
:::
:::
:::

::: grid
::: g-col-12
# Cleaning and Greening
:::
:::

::: grid
::: g-col-12
As outlined in the official OIPSS D.I.C.E overview, clean and green abatement is a key environmental intervention in this work. The broken glass theory summarized states that signs of disorder will lead to more disorder. The clean and greens are a mobile, and effective way to combat blight on a community and grassroots level. Each community organization partnered with CPAL for the D.I.C.E. initiative, cleans and remediates their prospective division, and the focus areas within the divisions. These monthly clean and greens allow for the mobilization of residents in the focus areas to also participate in beautifying their communities.
:::
:::

::: grid
::: g-col-6
```{r}
cumulative_lbs_trash <- formatC(trash_data$cumulative_lbs_trash, format = "d", big.mark = ",")
highchart() %>%
  hc_chart(type = "line", width = 400) %>%
  hc_xAxis(categories = trash_data$formatted_month) %>%
  hc_yAxis(min = 0) %>% 
  hc_add_series(data = trash_data$cumulative_lbs_trash, name = "Pounds", x = trash_data$formatted_month) %>%
  hc_title(text = "Cumulative Pounds of Trash Collected by DICE") %>%
  hc_tooltip(pointFormat = "{series.name}: {point.y:,.0f}" ) %>%
  hc_colors(palette_cpal_main) %>%
  hc_plotOptions(series = list(
    lineWidth = 4,  
    marker = list(
      enabled = TRUE,
      symbol = "circle", 
      radius = 6,         
      fillColor = NULL,   
      lineWidth = 2,
      lineColor = NULL    
    )
  )) %>%
  hc_legend(enabled = FALSE)
```
:::

::: g-col-6
```{r}
highchart() %>%
  hc_chart(type = "column", width = 400) %>%
  hc_xAxis(categories = trash_by_district$DIVISION) %>%
  hc_add_series(data = list_parse2(trash_by_district), name = "Pounds") %>%
  hc_title(text = "Pounds of Trash Collected by District") %>%
  hc_tooltip(pointFormat = "{series.name}: {point.y:,.0f}"  ) %>%
  hc_colors(palette_cpal_main) %>%
  hc_legend(enabled = FALSE) %>%
  hc_plotOptions(column = list(
    allowPointSelect = TRUE,
    cursor = 'pointer',
    dataLabels = list(
      enabled = FALSE
    )
  ))
```
:::
:::

::: grid
::: g-col-12
# Produce Drives

Between division site visits and observations coupled with D.I.C.E. event surveying and community feedback one thing became very apparent and stark about each focus area, it was within or around a food desert and food swamp. The surveying we did directly from the community repeatedly mentioned the want for fresh fruits and vegetables and having the ability to afford them. The DICE produce drives allow for real scale across the city to address food issues in the focus areas, as well as safety surrounding the issues of food insecurity as well. Hungry communities harbor unsafe and oftentimes dangerous conditions. Empowering and supporting our community partners who already do this work is essential to the success of this initiative. Without real partnership, scale of this magnitude wouldn’t be possible.
:::
:::

::: grid
::: g-col-6
```{r}
highchart() %>%
  hc_chart(type = "line", width = 400) %>%
  hc_xAxis(categories = produce_by_month$formatted_month) %>%
  hc_yAxis(min = 0) %>% 
  hc_add_series(
    data = produce_by_month$cumulative_lbs_produce, 
    name = "Pounds", 
    x = produce_by_month$formatted_month
  ) %>%
  hc_title(text = "Cumulative Pounds of Produce Distributed") %>%
  hc_subtitle(text = "by DICE") %>%
  hc_tooltip(
    pointFormat = "{series.name}: {point.y:,.0f}"  
  ) %>%
  hc_colors(palette_cpal_main) %>%
  hc_plotOptions(series = list(
    lineWidth = 4,  
    marker = list(
      enabled = TRUE,
      symbol = "circle", 
      radius = 6,         
      fillColor = NULL,   
      lineWidth = 2,
      lineColor = NULL    
    )
  )) %>%
  hc_legend(enabled = FALSE)

```
:::

::: g-col-6
```{r}
highchart() %>%
  hc_chart(type = "column", width = 400) %>%
  hc_add_series(data = list_parse2(produce_by_district), name = "Pounds") %>%
  hc_xAxis(categories = produce_by_district$DIVISION) %>%
  hc_title(text = "Pounds of Produce Distributed") %>%
  hc_subtitle(text = "by District") %>%
 hc_tooltip(pointFormat = "{series.name}: {point.y:,.0f}"  ) %>%
  hc_colors(palette_cpal_main) %>%
  hc_legend(enabled = FALSE) %>%
  hc_plotOptions(column = list(
    allowPointSelect = TRUE,
    cursor = 'pointer',
    dataLabels = list(
      enabled = FALSE
    )
  ))

```
:::
:::

::: grid
::: g-col-6
```{r include =FALSE}
highchart() %>%
  hc_chart(type = "line", width = 500) %>%
  hc_add_series(data = people_served_data$monthly_people_served, name = "Individuals", x =     people_served_data$formatted_month) %>%
  hc_yAxis(min = 0) %>% 
  hc_xAxis(categories = people_served_data$formatted_month) |> 
  hc_title(text = "Individuals Served by DICE Monthly") %>%
  hc_tooltip(pointFormat = "<span style='font-weight:bold'>{series.name}</span>: {point.y}<br/>") %>%
  hc_colors(palette_cpal_main) %>%
  hc_legend(align = 'center', verticalAlign = 'bottom', layout = 'horizontal') %>%
  hc_plotOptions(series = list(
    lineWidth = 4,  
    marker = list(
      enabled = TRUE,
      symbol = "circle", 
      radius = 4,         
      fillColor = NULL,   
      lineWidth = 4,
      lineColor = NULL    
    )
  )) |> 
  hc_legend(enabled = FALSE)

```
:::
:::

# Crime 

::: grid
::: g-col-12
```{r}
highchart() %>%
  hc_chart(type = "line") %>%
  hc_xAxis(categories = levels(prev_3_yr_avg$Month)) %>%
  hc_yAxis(min = 0) %>% 
  hc_add_series(data = prev_3_yr_avg$Year, name = "Previous 3 Year Average" , x = prev_3_yr_avg$Month) %>%
  hc_add_series(data = monthly_avg_2024$Year, name = "2024 Incidents", x = monthly_avg_2024$Month) %>%
  hc_title(text = "Incidents of Violent Crime in the City of Dallas") %>%
  hc_tooltip(pointFormat = "{series.x}:{point.y}") %>%
  hc_colors(palette_cpal_main) %>%
  hc_plotOptions(series = list(
    lineWidth = 4,  
    marker = list(
      enabled = TRUE,
      symbol = "circle", 
      radius = 6,         
      fillColor = NULL,   
      lineWidth = 2,
      lineColor = NULL    
    )
  )) |> 
  hc_legend(enabled = TRUE )

```
:::
:::
::: grid
::: g-col-12
```{r}
highchart() %>%
  hc_chart(type = "column") %>%
  hc_title(text = "City of Dallas Violent Crime") %>%
  hc_subtitle(text = "By Type") %>%
  hc_xAxis(categories = by_type_24$nibrs_crime) %>%
  hc_yAxis(title = list(text = "Incidents")) %>%
  hc_add_series(name = "Previous 3 year average", data = by_type_prev_3$prev_3) %>%
  hc_add_series(name = "2024", data = by_type_24$Year) %>%
  hc_colors(palette_cpal_main) %>%
  hc_plotOptions(column = list(
    grouping = TRUE,
    shadow = FALSE,
    borderWidth = 0
  ))

```
:::
:::
::: column-margin
Crime data sourced from Dallas Police Department Open Data Portal. Last updated 11/10/2024.  
:::
# D.I.C.E. Event Locations

::: grid
::: g-col-12
::: map-container
```{r}
leaflet(data = point_data) %>%
  addTiles(urlTemplate = cpaltemplates::cpal_mapbox_color,
           attribution = cpaltemplates::cpal_leaflet) %>%
  addPolygons(data = polygons,
              group = "DPD Divisions",
              color = "#042d33",
              weight = 1.5,
              opacity = 1,
              fill = FALSE,
              layerId = ~row.names(polygons)) %>%
    addPolygons(data = rtm_cells,
              group = "RTM Risk Cells",
              color = "red",
              weight = 1.5,
              opacity = 1,
              fill = FALSE,
              layerId = ~row.names(rtm_cells)) %>%
  addAwesomeMarkers(
    data = clean_locations,
    group = "Cleaning and Greening",
    label = ~paste("<b>Cleaning Location:</b>", clean_locations$street_address) %>%
      lapply(htmltools::HTML),
    icon = awesomeIcons(
      library = "fa",
      icon = "trash",
      iconColor = '#FFFFFF',
      markerColor = 'cadetblue'
    )) %>%
   addAwesomeMarkers(
    data = produce_locations,
    lng = ~jittered_lon,
    lat = ~jittered_lat,
    group = "Produce Distributions",
    label = ~paste("<b>Distribution Location:</b>", produce_locations$street_address) %>%
      lapply(htmltools::HTML),
    icon = awesomeIcons(
      library = "fa",
      icon = "apple",
      iconColor = '#FFFFFF',
      markerColor = 'orange')
   ) %>%
  addAwesomeMarkers(
    data = transformation_locations,
    group = "Property Transformations",
    label = ~paste("<b>Transformation Location:</b>", transformation_locations$street_address) %>%
      lapply(htmltools::HTML),
    icon = awesomeIcons(
      library = "fa",
      icon = "wrench",
      iconColor = '#FFFFFF',
      markerColor = 'pink')
   ) %>%
  addLayersControl(
    overlayGroups = c("Cleaning and Greening", "Produce Distributions", "Property Transformations", "RTM Risk Cells"),
    options = layersControlOptions(collapsed = FALSE))

  

```
:::
:::
:::

